---
import Layout from "../../layouts/DocsLayout.astro";

import Docbar from "../../components/Docbar.astro";
---

<Layout title="Policygen JS - Online Policy Generator">
  <div class="flex flex-row">
    <Docbar />

    <div class="p-6 w-full rounded-lg mx-auto bg-background-darken">
      <div class="flex flex-row justify-between items-center">
        <h1 class="text-white text-3xl font-bold">Policygen JS</h1>
        <a
          class="text-white text-3xl hover:text-accent"
          href="https://github.com/imothee/policygen-js"
          ><svg
            viewBox="0 0 1024 1024"
            fill="currentColor"
            height="1em"
            width="1em"
          >
            <path
              d="M511.6 76.3C264.3 76.2 64 276.4 64 523.5 64 718.9 189.3 885 363.8 946c23.5 5.9 19.9-10.8 19.9-22.2v-77.5c-135.7 15.9-141.2-73.9-150.3-88.9C215 726 171.5 718 184.5 703c30.9-15.9 62.4 4 98.9 57.9 26.4 39.1 77.9 32.5 104 26 5.7-23.5 17.9-44.5 34.7-60.8-140.6-25.2-199.2-111-199.2-213 0-49.5 16.3-95 48.3-131.7-20.4-60.5 1.9-112.3 4.9-120 58.1-5.2 118.5 41.6 123.2 45.3 33-8.9 70.7-13.6 112.9-13.6 42.4 0 80.2 4.9 113.5 13.9 11.3-8.6 67.3-48.8 121.3-43.9 2.9 7.7 24.7 58.3 5.5 118 32.4 36.8 48.9 82.7 48.9 132.3 0 102.2-59 188.1-200 212.9a127.5 127.5 0 0138.1 91v112.5c.8 9 0 17.9 15 17.9 177.1-59.7 304.6-227 304.6-424.1 0-247.2-200.4-447.3-447.5-447.3z"
            ></path>
          </svg></a
        >
      </div>

      <h2 class="text-white text-xl font-bold my-4">Installation</h2>
      <pre
        class="bg-gray-700 p-2 rounded-lg text-white my-2 text-sm"><code class="language-bash">npm install 'policygen'</code></pre>
      <h3 class="text-white text-lg font-bold my-4">
        If using Tailwind as your css framework
      </h3>
      <p class="text-white">Add the following to tailwind.config.js:</p>
      <pre
        class="bg-gray-700 p-2 rounded-lg text-white my-2 text-sm"><code class="language-javascript" is:raw>module.exports = {
  content: [
    './public/*.html',
    ...,
    getPolicygenViewPath()
  ]
}

function getPolicygenViewPath() {
  return `./node_modules/policygen/**/*.{ts}`;
}</code></pre>
      <h2 class="text-white text-xl font-bold my-4">Usage</h2>
      <p class="text-white">
        Because of issues making raw file templates available to both the
        browser and node libraries, the templates which are loaded in as js
        files with the string contents to avoid having to do filesystem lookups
        for the templates. We are using ejs to render on the server as it is
        stable and well documented but the ejs browser library caused nothing
        but pain so for the client/browser library we're using lodash templates
        instead.
      </p>
      <p class="text-white mt-4">Create your config</p>
      <pre
        class="bg-gray-700 p-2 rounded-lg text-white my-2 text-sm"><code class="language-javascript" is:raw>const config = {
  ...
}</code></pre>

      <h3 class="text-white text-lg">Client Library (Browser)</h3>
      <pre
        class="bg-gray-700 p-2 rounded-lg text-white my-2 text-sm"><code class="language-javascript">import Policygen from "policygen/client";</code></pre>
      <h3 class="text-white text-lg">Node Library (Browser)</h3>
      <pre
        class="bg-gray-700 p-2 rounded-lg text-white my-2 text-sm"><code class="language-javascript">import Policygen from "policygen";</code></pre>
      <h3 class="text-white text-lg">Render</h3>
      <pre
        class="bg-gray-700 p-2 rounded-lg text-white my-2 text-sm"><code class="language-javascript" is:raw>async function generatePrivacyPolicy() {
  const policygen = new Policygen({ config });
  policy = await policygen.privacyPolicy();
}

async function generateTermsOfService() {
  const policygen = new Policygen({ config });
  policy = await policygen.termsOfService();
}</code></pre>
    </div>
    <div class="w-96"></div>
  </div>
</Layout>
